#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

void generate_key(int key[], int len) {
    for (int i = 0; i < len; i++) {
        key[i] = rand() % 27;  // 0 to 26 inclusive
    }
}

void encrypt(const char *plaintext, char *ciphertext, int key[]) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = ((plaintext[i] - 'A') + key[i]) % 26 + 'A';
        } else if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = ((plaintext[i] - 'a') + key[i]) % 26 + 'a';
        } else {
            ciphertext[i] = plaintext[i];  // non-alpha chars unchanged
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

void decrypt(const char *ciphertext, char *plaintext, int key[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            plaintext[i] = ((ciphertext[i] - 'A') - key[i] + 26) % 26 + 'A';
        } else if (ciphertext[i] >= 'a' && ciphertext[i] <= 'z') {
            plaintext[i] = ((ciphertext[i] - 'a') - key[i] + 26) % 26 + 'a';
        } else {
            plaintext[i] = ciphertext[i];  // non-alpha chars unchanged
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}

void print_key(int key[], int len) {
    printf("Key: ");
    for (int i = 0; i < len; i++) {
        printf("%d ", key[i]);
    }
    printf("\n");
}

int main() {
    char plaintext[128], ciphertext[128], decrypted[128];
    int key[128];

    printf("Enter plaintext (A-Z or a-z only): ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // remove newline

    int len = strlen(plaintext);

    srand(time(NULL));
    generate_key(key, len);
    print_key(key, len);

    encrypt(plaintext, ciphertext, key);
    printf("Ciphertext: %s\n", ciphertext);

    decrypt(ciphertext, decrypted, key);
    printf("Decrypted: %s\n", decrypted);

    return 0;
}
